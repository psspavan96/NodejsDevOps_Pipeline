## Creating a Jenkins Job to create and push Docker Image to dockerHub ##

Note: Before proceeding with the steps below, go to Manage Jenkins > credentials > Jenkins. Click on Jenkins and add your github and dockerhub credentials. 
Also login to your jenkins server from your command prompt/terminal and execute this command "chmod 777 /var/run/docker.sock".

1) Log in to your Jenkins server and Click on New Item.

2) Enter the project name and Select Pipeline.

3) Paste the script given below in the pipeline section of the Jenkins Job:

pipeline {
  environment {
    registry = "your docker registry"
    registryCredential = 'dockerhub'
    dockerImage = ''
  }
  agent any
  tools {nodejs "Node" }
  stages {
    stage('Cloning Git') {
      steps {
        git 'your repository'
      }
    }
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build registry + ":$BUILD_NUMBER"
        }
      }
    }
    stage('Deploy Image') {
      steps{
         script {
            docker.withRegistry( '', registryCredential ) {
            dockerImage.push()
          }
        }
      }
    }
  }
}

4) Click Apply and Save

5) Once the configuration is done, Click on Build now to build the job.
